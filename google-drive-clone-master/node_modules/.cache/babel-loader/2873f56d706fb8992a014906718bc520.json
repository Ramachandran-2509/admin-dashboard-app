{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\nice-app\\\\google-drive-clone-master\\\\src\\\\components\\\\filesView\\\\FileItem.js\";\nimport React from 'react';\nimport '../../styles/FileItem.css';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nconst FileItem = ({\n  id,\n  caption,\n  timestamp,\n  fileUrl,\n  size\n}) => {\n  const fileDate = `${timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate().getDate()} ${monthNames[(timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate().getMonth()) + 1]} ${timestamp === null || timestamp === void 0 ? void 0 : timestamp.toDate().getFullYear()}`;\n\n  const getReadableFileSizeString = fileSizeInBytes => {\n    let i = -1;\n    const byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    do {\n      fileSizeInBytes = fileSizeInBytes / 1024;\n      i++;\n    } while (fileSizeInBytes > 1024);\n\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileItem\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: fileUrl,\n      target: \"_blank\",\n      download: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileItem--left\",\n        children: [/*#__PURE__*/_jsxDEV(InsertDriveFileIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileItem--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: fileDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getReadableFileSizeString(size)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FileItem;\nexport default FileItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileItem\");","map":{"version":3,"sources":["F:/projects/nice-app/google-drive-clone-master/src/components/filesView/FileItem.js"],"names":["React","InsertDriveFileIcon","monthNames","FileItem","id","caption","timestamp","fileUrl","size","fileDate","toDate","getDate","getMonth","getFullYear","getReadableFileSizeString","fileSizeInBytes","i","byteUnits","Math","max","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AAEA,OAAOC,mBAAP,MAAgC,oCAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA;AAAnC,CAAD,KAA+C;AAC5D,QAAMC,QAAQ,GAAI,GAAEH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEI,MAAX,GAAoBC,OAApB,EAA8B,IAAGT,UAAU,CAAC,CAAAI,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEI,MAAX,GAAoBE,QAApB,MAAiC,CAAlC,CAAqC,IAAGN,SAAtF,aAAsFA,SAAtF,uBAAsFA,SAAS,CAAEI,MAAX,GAAoBG,WAApB,EAAkC,EAAzI;;AAEA,QAAMC,yBAAyB,GAAIC,eAAD,IAAqB;AACnD,QAAIC,CAAC,GAAG,CAAC,CAAT;AACA,UAAMC,SAAS,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAA/C,CAAlB;;AACA,OAAG;AACCF,MAAAA,eAAe,GAAGA,eAAe,GAAG,IAApC;AACAC,MAAAA,CAAC;AACJ,KAHD,QAGSD,eAAe,GAAG,IAH3B;;AAKA,WAAOG,IAAI,CAACC,GAAL,CAASJ,eAAT,EAA0B,GAA1B,EAA+BK,OAA/B,CAAuC,CAAvC,IAA4CH,SAAS,CAACD,CAAD,CAA5D;AACH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAG,MAAA,IAAI,EAAET,OAAT;AAAkB,MAAA,MAAM,EAAC,QAAzB;AAAkC,MAAA,QAAQ,MAA1C;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAA,oBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIK,yBAAyB,CAACN,IAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5BD;;KAAML,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport '../../styles/FileItem.css'\n\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nconst FileItem = ({ id, caption, timestamp, fileUrl, size }) => {\n    const fileDate = `${timestamp?.toDate().getDate()} ${monthNames[timestamp?.toDate().getMonth() + 1]} ${timestamp?.toDate().getFullYear()}`\n\n    const getReadableFileSizeString = (fileSizeInBytes) => {\n        let i = -1;\n        const byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\n        do {\n            fileSizeInBytes = fileSizeInBytes / 1024;\n            i++;\n        } while (fileSizeInBytes > 1024);\n\n        return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\n    };\n\n    return (\n        <div className='fileItem'>\n            <a href={fileUrl} target=\"_blank\" download>\n                <div className=\"fileItem--left\">\n                    <InsertDriveFileIcon />\n                    <p>{caption}</p>\n                </div>\n                <div className=\"fileItem--right\">\n                    <p>{fileDate}</p>\n                    <p>{getReadableFileSizeString(size)}</p>\n                </div>\n            </a>\n        </div>\n    )\n}\n\nexport default FileItem\n"]},"metadata":{},"sourceType":"module"}